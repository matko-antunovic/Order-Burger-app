{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Matko\\\\Desktop\\\\repeat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Matko\\\\Desktop\\\\repeat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Matko\\\\Desktop\\\\repeat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Matko\\\\Desktop\\\\repeat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Matko\\\\Desktop\\\\repeat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Matko\\\\Desktop\\\\repeat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Matko\\\\Desktop\\\\repeat\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport * as burgerBuilderActions from \"../../store/actions/index\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport axios from \"../../axios-orders\";\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\n\nvar BurgerBuilder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BurgerBuilder, _Component);\n\n  function BurgerBuilder() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BurgerBuilder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BurgerBuilder)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      purchasing: false,\n      loading: false,\n      error: false\n    };\n\n    _this.purchaseHandler = function () {\n      _this.setState({\n        purchasing: true\n      });\n    };\n\n    _this.closedHandler = function () {\n      _this.setState({\n        purchasing: false\n      });\n    };\n\n    _this.continueHandler = function () {\n      _this.props.history.push(\"/checkout\");\n    };\n\n    return _this;\n  }\n\n  _createClass(BurgerBuilder, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"https://react-my-burger-30c8e.firebaseio.com/ingredients.json\").then(function (response) {\n        _this2.setState({\n          ingredients: response.data\n        });\n      }).catch(function (error) {\n        _this2.setState({\n          error: true\n        });\n      });\n    }\n  }, {\n    key: \"updatePurchaseState\",\n    value: function updatePurchaseState(ingredients) {\n      var sum = Object.keys(ingredients).map(function (igKey) {\n        return ingredients[igKey];\n      }).reduce(function (sum, el) {\n        return sum + el;\n      }, 0);\n      return sum > 0;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var disabledInfo = _objectSpread({}, this.props.ings);\n\n      for (var key in disabledInfo) {\n        disabledInfo[key] = disabledInfo[key] <= 0;\n      }\n\n      var orderSummary = \"null\";\n      var burger = this.state.error ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Ingredients can't be loaded\") : React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      });\n\n      if (this.props.ings) {\n        burger = React.createElement(Aux, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(Burger, {\n          ingredients: this.props.ings,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }), React.createElement(BuildControls, {\n          ordered: this.purchaseHandler,\n          ingredientAdded: this.props.onIngredientAdded,\n          ingredientRemoved: this.props.onIngredientRemoved,\n          disabled: disabledInfo,\n          purchasable: this.updatePurchaseState(this.props.ings),\n          price: this.props.price,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }));\n        orderSummary = React.createElement(OrderSummary, {\n          price: this.props.price,\n          purchaseCancelled: this.closedHandler,\n          purchaseContinued: this.continueHandler,\n          ingredients: this.props.ings,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.loading) {\n        orderSummary = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        modalClosed: this.closedHandler,\n        show: this.state.purchasing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, orderSummary), burger);\n    }\n  }]);\n\n  return BurgerBuilder;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    ings: state.ingredients,\n    price: state.totalPrice\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onIngredientAdded: function onIngredientAdded(ingName) {\n      return dispatch(burgerBuilderActions.addIngredient(ingName));\n    },\n    onIngredientRemoved: function onIngredientRemoved(ingName) {\n      return dispatch(burgerBuilderActions.removeIngredient(ingName));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["C:\\Users\\Matko\\Desktop\\repeat\\src\\containers\\BurgerBuilder\\BurgerBuilder.js"],"names":["React","Component","connect","burgerBuilderActions","withErrorHandler","Spinner","axios","Aux","Burger","BuildControls","Modal","OrderSummary","BurgerBuilder","state","purchasing","loading","error","purchaseHandler","setState","closedHandler","continueHandler","props","history","push","get","then","response","ingredients","data","catch","sum","Object","keys","map","igKey","reduce","el","disabledInfo","ings","key","orderSummary","burger","onIngredientAdded","onIngredientRemoved","updatePurchaseState","price","mapStateToProps","totalPrice","mapDispatchToProps","dispatch","ingName","addIngredient","removeIngredient"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport * as burgerBuilderActions from \"../../store/actions/index\";\r\n\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport axios from \"../../axios-orders\";\r\nimport Aux from '../../hoc/Aux';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from \"../../components/UI/Modal/Modal\"\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\"\r\n\r\n\r\nclass BurgerBuilder extends Component {\r\n    \r\n    state = {\r\n        purchasing: false,\r\n        loading: false,\r\n        error:false\r\n    }\r\n\r\n     componentDidMount(){\r\n       axios.get(\"https://react-my-burger-30c8e.firebaseio.com/ingredients.json\")\r\n        .then(response=> {\r\n            this.setState({ingredients:response.data});\r\n        })\r\n        .catch(error=> {\r\n            this.setState({error:true})\r\n        });\r\n    }\r\n\r\n    updatePurchaseState (ingredients) {\r\n        const sum = Object.keys( ingredients )\r\n            .map( igKey => {\r\n                return ingredients[igKey];\r\n            } )\r\n            .reduce( ( sum, el ) => {\r\n                return sum + el;\r\n            }, 0 );\r\n        return sum > 0 ;\r\n    }\r\n\r\n    purchaseHandler=()=> {\r\n        this.setState({purchasing :true})\r\n    }\r\n\r\n    closedHandler=()=> {\r\n    this.setState({purchasing: false});\r\n    }\r\n\r\n    continueHandler=() => {\r\n       this.props.history.push(\"/checkout\");\r\n       \r\n\r\n    }\r\n\r\n    render () {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for ( let key in disabledInfo ) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n\r\n        let orderSummary= \"null\";\r\n        let burger=this.state.error ? <p>Ingredients can't be loaded</p> : <Spinner/>\r\n\r\n        if (this.props.ings) {\r\n            burger= (\r\n                <Aux>\r\n            <Burger ingredients={this.props.ings} />\r\n            <BuildControls\r\n                ordered={this.purchaseHandler}\r\n                ingredientAdded={this.props.onIngredientAdded}\r\n                ingredientRemoved={this.props.onIngredientRemoved}\r\n                disabled={disabledInfo}\r\n                purchasable={this.updatePurchaseState(this.props.ings)}\r\n                price={this.props.price} />\r\n                </Aux>\r\n            );\r\n            orderSummary = <OrderSummary \r\n            price={this.props.price}\r\n            purchaseCancelled={this.closedHandler}\r\n            purchaseContinued={this.continueHandler}\r\n            ingredients={this.props.ings}/>\r\n        }\r\n        \r\n        \r\n        if(this.state.loading) {\r\n            orderSummary= <Spinner />\r\n        }\r\n        \r\n\r\n        return (\r\n            <Aux>\r\n               <Modal \r\n               modalClosed={this.closedHandler}\r\n               show={this.state.purchasing}>\r\n               {orderSummary}\r\n               </Modal>\r\n               {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps= state => {\r\n    return {\r\n        ings:state.ingredients,\r\n        price:state.totalPrice\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps= dispatch => {\r\n    return {\r\n        onIngredientAdded:(ingName)=>dispatch(burgerBuilderActions.addIngredient(ingName)),\r\n        onIngredientRemoved:(ingName)=>dispatch(burgerBuilderActions.removeIngredient(ingName))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder,axios));"]},"metadata":{},"sourceType":"module"}