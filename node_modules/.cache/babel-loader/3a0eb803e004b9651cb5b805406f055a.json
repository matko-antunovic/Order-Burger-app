{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\nvar initialState = {\n  orders: [],\n  loading: false,\n  purchased: false\n};\n\nvar purchaseInit = function purchaseInit(state, action) {\n  return updateObject(state, {\n    purchased: false\n  });\n};\n\nvar purchaseBurgerStart = function purchaseBurgerStart(state, action) {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nvar purchaseBurgerSuccess = function purchaseBurgerSuccess(state, action) {\n  var newOrder = updateObject(action.orderData, {\n    id: action.orderId\n  });\n  return updateObject(state, {\n    loading: false,\n    purchased: true,\n    orders: state.orders.concat(newOrder)\n  });\n};\n\nvar purchaseBurgerFail = function purchaseBurgerFail(state, action) {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nvar fetchOrdersStart = function fetchOrdersStart(state, action) {\n  return updateObject(state, {\n    loading: true\n  });\n};\n\nvar fetchOrdersSuccess = function fetchOrdersSuccess(state, action) {\n  return updateObject(state, {\n    orders: action.orders,\n    loading: false\n  });\n};\n\nvar fetchOrdersFail = function fetchOrdersFail(state, action) {\n  return updateObject(state, {\n    loading: false\n  });\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.PURCHASE_INIT:\n      return purchaseInit(state, action);\n\n    case actionTypes.PURCHASE_BURGER_START:\n      return purchaseBurgerStart(state, action);\n\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      return purchaseBurgerSuccess(state, action);\n\n    case actionTypes.PURCHASE_BURGER_FAIL:\n      return purchaseBurgerFail(state, action);\n\n    case actionTypes.FETCH_ORDERS_START:\n      return fetchOrdersStart(state, action);\n\n    case actionTypes.FETCH_ORDERS_SUCCESS:\n      return fetchOrdersSuccess(state, action);\n\n    case actionTypes.FETCH_ORDERS_FAIL:\n      return fetchOrdersFail(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:\\Users\\Matko\\Desktop\\repeat\\src\\store\\reducers\\order.js"],"names":["actionTypes","updateObject","initialState","orders","loading","purchased","purchaseInit","state","action","purchaseBurgerStart","purchaseBurgerSuccess","newOrder","orderData","id","orderId","concat","purchaseBurgerFail","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","reducer","type","PURCHASE_INIT","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\r\nimport { updateObject } from '../utility';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n};\r\n\r\nconst purchaseInit = ( state, action ) => {\r\n    return updateObject( state, { purchased: false } );\r\n};\r\n\r\nconst purchaseBurgerStart = ( state, action ) => {\r\n    return updateObject( state, { loading: false } );\r\n};\r\n\r\nconst purchaseBurgerSuccess = ( state, action ) => {\r\n    const newOrder = updateObject( action.orderData, { id: action.orderId } );\r\n    return updateObject( state, {\r\n        loading: false,\r\n        purchased: true,\r\n        orders: state.orders.concat( newOrder )\r\n    } );\r\n};\r\n\r\nconst purchaseBurgerFail = ( state, action ) => {\r\n    return updateObject( state, { loading: false } );\r\n};\r\n\r\nconst fetchOrdersStart = ( state, action ) => {\r\n    return updateObject( state, { loading: true } );\r\n};\r\n\r\nconst fetchOrdersSuccess = ( state, action ) => {\r\n    return updateObject( state, {\r\n        orders: action.orders,\r\n        loading: false\r\n    } );\r\n};\r\n\r\nconst fetchOrdersFail = ( state, action ) => {\r\n    return updateObject( state, { loading: false } );\r\n};\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case actionTypes.PURCHASE_INIT: return purchaseInit( state, action );\r\n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart( state, action );\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess( state, action )\r\n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail( state, action );\r\n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart( state, action );\r\n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess( state, action );\r\n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail( state, action );\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}