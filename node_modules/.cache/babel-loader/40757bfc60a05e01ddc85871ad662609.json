{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Matko\\\\Desktop\\\\repeat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"C:\\\\Users\\\\Matko\\\\Desktop\\\\repeat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nvar initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false\n};\nvar INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      var updatedIngredient = _defineProperty({}, action.ingredientName, state.ingredients[action.ingredientName] + 1);\n\n      var updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n      var updatedState = {\n        ingredients: updatedIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n      };\n      return updatedObject(state, updatedState);\n\n    case actionTypes.REMOVE_INGREDIENT:\n      var updatedIng = _defineProperty({}, action.ingredientName, state.ingredients[action.ingredientName] - 1);\n\n      var updatedIngs = updateObject(state.ingredients, updatedIngredient);\n      var updatedSt = {\n        ingredients: updatedIngs,\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n      };\n      return updatedObject(state, updatedSt);\n\n    case actionTypes.SET_INGREDIENTS:\n      return _objectSpread({}, state, {\n        ingredients: {\n          salad: action.ingredients.salad,\n          bacon: action.ingredients.bacon,\n          cheese: action.ingredients.cheese,\n          meat: action.ingredients.meat\n        },\n        error: false,\n        totalPrice: 4\n      });\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return _objectSpread({}, state, {\n        error: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:\\Users\\Matko\\Desktop\\repeat\\src\\store\\reducers\\burgerBuilder.js"],"names":["actionTypes","updateObject","initialState","ingredients","totalPrice","error","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","state","action","type","ADD_INGREDIENT","updatedIngredient","ingredientName","updatedIngredients","updatedState","updatedObject","REMOVE_INGREDIENT","updatedIng","updatedIngs","updatedSt","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED"],"mappings":";;AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAAQC,YAAR,QAA4B,YAA5B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,IADI;AAEjBC,EAAAA,UAAU,EAAC,CAFM;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAMA,IAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,GADe;AAEtBC,EAAAA,MAAM,EAAE,GAFc;AAGtBC,EAAAA,IAAI,EAAE,GAHgB;AAItBC,EAAAA,KAAK,EAAE;AAJe,CAA1B;;AAQA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAA+B;AAAA,MAA9BC,KAA8B,uEAAxBV,YAAwB;AAAA,MAAVW,MAAU;;AAC3C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKd,WAAW,CAACe,cAAjB;AAEA,UAAMC,iBAAiB,uBAAKH,MAAM,CAACI,cAAZ,EAA4BL,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACI,cAAzB,IAA2C,CAAvE,CAAvB;;AACA,UAAMC,kBAAkB,GAACjB,YAAY,CAACW,KAAK,CAACT,WAAP,EAAoBa,iBAApB,CAArC;AACA,UAAMG,YAAY,GAAG;AACjBhB,QAAAA,WAAW,EAAEe,kBADI;AAEjBd,QAAAA,UAAU,EAACQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACI,cAAR;AAF9B,OAArB;AAKA,aAAOG,aAAa,CAACR,KAAD,EAAOO,YAAP,CAApB;;AAEA,SAAKnB,WAAW,CAACqB,iBAAjB;AAEA,UAAMC,UAAU,uBAAKT,MAAM,CAACI,cAAZ,EAA4BL,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACI,cAAzB,IAA2C,CAAvE,CAAhB;;AACA,UAAMM,WAAW,GAACtB,YAAY,CAACW,KAAK,CAACT,WAAP,EAAoBa,iBAApB,CAA9B;AACA,UAAMQ,SAAS,GAAG;AACdrB,QAAAA,WAAW,EAAEoB,WADC;AAEdnB,QAAAA,UAAU,EAACQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACI,cAAR;AAFjC,OAAlB;AAKA,aAAOG,aAAa,CAACR,KAAD,EAAOY,SAAP,CAApB;;AAGA,SAAKxB,WAAW,CAACyB,eAAjB;AACA,+BACOb,KADP;AAEIT,QAAAA,WAAW,EAAE;AACTI,UAAAA,KAAK,EAAEM,MAAM,CAACV,WAAP,CAAmBI,KADjB;AAETG,UAAAA,KAAK,EAAEG,MAAM,CAACV,WAAP,CAAmBO,KAFjB;AAGTF,UAAAA,MAAM,EAAEK,MAAM,CAACV,WAAP,CAAmBK,MAHlB;AAITC,UAAAA,IAAI,EAAEI,MAAM,CAACV,WAAP,CAAmBM;AAJhB,SAFjB;AAQIJ,QAAAA,KAAK,EAAC,KARV;AASID,QAAAA,UAAU,EAAE;AAThB;;AAYA,SAAKJ,WAAW,CAAC0B,wBAAjB;AACA,+BACOd,KADP;AAEIP,QAAAA,KAAK,EAAC;AAFV;;AAII;AACA,aAAOO,KAAP;AA3CR;AA8CH,CA/CD;;AAiDA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\r\nimport {updateObject} from  \"../utility\";\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice:4,\r\n    error: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\n\r\nconst reducer = (state=initialState, action)=> {\r\n    switch(action.type) {\r\n        case actionTypes.ADD_INGREDIENT:\r\n\r\n        const updatedIngredient= { [action.ingredientName]:state.ingredients[action.ingredientName] + 1}\r\n        const updatedIngredients=updateObject(state.ingredients, updatedIngredient);\r\n        const updatedState = {\r\n            ingredients: updatedIngredients,\r\n            totalPrice:state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n        }\r\n        \r\n        return updatedObject(state,updatedState);\r\n\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n        \r\n        const updatedIng= { [action.ingredientName]:state.ingredients[action.ingredientName] - 1}\r\n        const updatedIngs=updateObject(state.ingredients, updatedIngredient);\r\n        const updatedSt = {\r\n            ingredients: updatedIngs,\r\n            totalPrice:state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n        }\r\n        \r\n        return updatedObject(state,updatedSt);\r\n\r\n\r\n        case actionTypes.SET_INGREDIENTS:\r\n        return {\r\n            ...state,\r\n            ingredients: {\r\n                salad: action.ingredients.salad,\r\n                bacon: action.ingredients.bacon,\r\n                cheese: action.ingredients.cheese,\r\n                meat: action.ingredients.meat\r\n            },\r\n            error:false,\r\n            totalPrice: 4\r\n        };\r\n\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n        return {\r\n            ...state,\r\n            error:true\r\n        };\r\n            default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}