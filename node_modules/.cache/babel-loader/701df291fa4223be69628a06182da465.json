{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Matko\\\\Desktop\\\\repeat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport * as actionTypes from \"../actions/actionTypes\";\nimport { updateObject } from \"../utility\";\nvar initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false\n};\nvar INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nvar addIngredient = function addIngredient(state, action) {\n  var updatedIngredient = _defineProperty({}, action.ingredientName, state.ingredients[action.ingredientName] + 1);\n\n  var updatedIngredients = updateObject(state.ingredients, updatedIngredient);\n  var updatedState = {\n    ingredients: updatedIngredients,\n    totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n  };\n  return updateObject(state, updatedState);\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return addIngredient(state, action);\n\n    case actionTypes.REMOVE_INGREDIENT:\n      var updatedIng = _defineProperty({}, action.ingredientName, state.ingredients[action.ingredientName] - 1);\n\n      var updatedIngs = updateObject(state.ingredients, updatedIng);\n      var updatedSt = {\n        ingredients: updatedIngs,\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n      };\n      return updateObject(state, updatedSt);\n\n    case actionTypes.SET_INGREDIENTS:\n      return updateObject(state, {\n        ingredients: {\n          salad: action.ingredients.salad,\n          bacon: action.ingredients.bacon,\n          cheese: action.ingredients.cheese,\n          meat: action.ingredients.meat\n        },\n        error: false,\n        totalPrice: 4\n      });\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return updateObject(state, {\n        error: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:\\Users\\Matko\\Desktop\\repeat\\src\\store\\reducers\\burgerBuilder.js"],"names":["actionTypes","updateObject","initialState","ingredients","totalPrice","error","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","state","action","updatedIngredient","ingredientName","updatedIngredients","updatedState","reducer","type","ADD_INGREDIENT","REMOVE_INGREDIENT","updatedIng","updatedIngs","updatedSt","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAAQC,YAAR,QAA4B,YAA5B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,IADI;AAEjBC,EAAAA,UAAU,EAAC,CAFM;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAMA,IAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,GADe;AAEtBC,EAAAA,MAAM,EAAE,GAFc;AAGtBC,EAAAA,IAAI,EAAE,GAHgB;AAItBC,EAAAA,KAAK,EAAE;AAJe,CAA1B;;AAOA,IAAMC,aAAa,GAAC,SAAdA,aAAc,CAACC,KAAD,EAAOC,MAAP,EAAkB;AAClC,MAAMC,iBAAiB,uBAAKD,MAAM,CAACE,cAAZ,EAA4BH,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACE,cAAzB,IAA2C,CAAvE,CAAvB;;AACA,MAAMC,kBAAkB,GAACf,YAAY,CAACW,KAAK,CAACT,WAAP,EAAoBW,iBAApB,CAArC;AACA,MAAMG,YAAY,GAAG;AACjBd,IAAAA,WAAW,EAAEa,kBADI;AAEjBZ,IAAAA,UAAU,EAACQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACE,cAAR;AAF9B,GAArB;AAKI,SAAOd,YAAY,CAACW,KAAD,EAAOK,YAAP,CAAnB;AACP,CATD;;AAWA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAA+B;AAAA,MAA9BN,KAA8B,uEAAxBV,YAAwB;AAAA,MAAVW,MAAU;;AAC3C,UAAOA,MAAM,CAACM,IAAd;AACI,SAAKnB,WAAW,CAACoB,cAAjB;AAAgC,aAAOT,aAAa,CAACC,KAAD,EAAOC,MAAP,CAApB;;AAIhC,SAAKb,WAAW,CAACqB,iBAAjB;AAEA,UAAMC,UAAU,uBAAKT,MAAM,CAACE,cAAZ,EAA4BH,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACE,cAAzB,IAA2C,CAAvE,CAAhB;;AACA,UAAMQ,WAAW,GAACtB,YAAY,CAACW,KAAK,CAACT,WAAP,EAAoBmB,UAApB,CAA9B;AACA,UAAME,SAAS,GAAG;AACdrB,QAAAA,WAAW,EAAEoB,WADC;AAEdnB,QAAAA,UAAU,EAACQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACE,cAAR;AAFjC,OAAlB;AAKA,aAAOd,YAAY,CAACW,KAAD,EAAOY,SAAP,CAAnB;;AAGA,SAAKxB,WAAW,CAACyB,eAAjB;AACA,aAAOxB,YAAY,CAACW,KAAD,EAAO;AAACT,QAAAA,WAAW,EAAE;AACpCI,UAAAA,KAAK,EAAEM,MAAM,CAACV,WAAP,CAAmBI,KADU;AAEpCG,UAAAA,KAAK,EAAEG,MAAM,CAACV,WAAP,CAAmBO,KAFU;AAGpCF,UAAAA,MAAM,EAAEK,MAAM,CAACV,WAAP,CAAmBK,MAHS;AAIpCC,UAAAA,IAAI,EAAEI,MAAM,CAACV,WAAP,CAAmBM;AAJW,SAAd;AAM1BJ,QAAAA,KAAK,EAAC,KANoB;AAO1BD,QAAAA,UAAU,EAAE;AAPc,OAAP,CAAnB;;AAWA,SAAKJ,WAAW,CAAC0B,wBAAjB;AACA,aAAOzB,YAAY,CAACW,KAAD,EAAQ;AAACP,QAAAA,KAAK,EAAC;AAAP,OAAR,CAAnB;;AACI;AACA,aAAOO,KAAP;AAhCR;AAmCH,CApCD;;AAsCA,eAAeM,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\r\nimport {updateObject} from  \"../utility\";\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice:4,\r\n    error: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nconst addIngredient=(state,action) => {\r\n    const updatedIngredient= { [action.ingredientName]:state.ingredients[action.ingredientName] + 1}\r\n    const updatedIngredients=updateObject(state.ingredients, updatedIngredient);\r\n    const updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice:state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n        }\r\n        \r\n        return updateObject(state,updatedState);\r\n};\r\n\r\nconst reducer = (state=initialState, action)=> {\r\n    switch(action.type) {\r\n        case actionTypes.ADD_INGREDIENT:return addIngredient(state,action);\r\n\r\n        \r\n\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n        \r\n        const updatedIng= { [action.ingredientName]:state.ingredients[action.ingredientName] - 1}\r\n        const updatedIngs=updateObject(state.ingredients, updatedIng);\r\n        const updatedSt = {\r\n            ingredients: updatedIngs,\r\n            totalPrice:state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n        }\r\n        \r\n        return updateObject(state,updatedSt);\r\n\r\n\r\n        case actionTypes.SET_INGREDIENTS:\r\n        return updateObject(state,{ingredients: {\r\n            salad: action.ingredients.salad,\r\n            bacon: action.ingredients.bacon,\r\n            cheese: action.ingredients.cheese,\r\n            meat: action.ingredients.meat\r\n        },\r\n        error:false,\r\n        totalPrice: 4\r\n        });\r\n        \r\n\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n        return updateObject(state, {error:true});\r\n            default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}