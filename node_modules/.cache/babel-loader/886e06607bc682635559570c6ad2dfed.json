{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Matko\\\\Desktop\\\\repeat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Matko\\\\Desktop\\\\repeat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Matko\\\\Desktop\\\\repeat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Matko\\\\Desktop\\\\repeat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Matko\\\\Desktop\\\\repeat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Matko\\\\Desktop\\\\repeat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Matko\\\\Desktop\\\\repeat\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport * as actionTypes from \"../../store/actions\";\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport axios from \"../../axios-orders\";\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\n\nvar BurgerBuilder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BurgerBuilder, _Component);\n\n  function BurgerBuilder() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BurgerBuilder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BurgerBuilder)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false,\n      loading: false,\n      error: false\n      /*componentDidMount(){\r\n        axios.get(\"https://react-my-burger-30c8e.firebaseio.com/ingredients.json\")\r\n         .then(response=> {\r\n             this.setState({ingredients:response.data});\r\n         })\r\n         .catch(error=> {\r\n             this.setState({error:true})\r\n         });\r\n      }*/\n\n      /*updatePurchaseState (ingredients) {\r\n          const sum = Object.keys( ingredients )\r\n              .map( igKey => {\r\n                  return ingredients[igKey];\r\n              } )\r\n              .reduce( ( sum, el ) => {\r\n                  return sum + el;\r\n              }, 0 );\r\n          this.setState( { purchasable: sum > 0 } );\r\n      }*/\n\n    };\n\n    _this.addIngredientHandler = function (type) {\n      var oldCount = _this.state.ingredients[type];\n      var updatedCount = oldCount + 1;\n\n      var updatedIngredients = _objectSpread({}, _this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      var priceAddition = INGREDIENT_PRICES[type];\n      var oldPrice = _this.state.totalPrice;\n      var newPrice = oldPrice + priceAddition;\n\n      _this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n\n      _this.updatePurchaseState(updatedIngredients);\n    };\n\n    _this.removeIngredientHandler = function (type) {\n      var oldCount = _this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      var updatedCount = oldCount - 1;\n\n      var updatedIngredients = _objectSpread({}, _this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      var priceDeduction = INGREDIENT_PRICES[type];\n      var oldPrice = _this.state.totalPrice;\n      var newPrice = oldPrice - priceDeduction;\n\n      _this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n\n      _this.updatePurchaseState(updatedIngredients);\n    };\n\n    _this.purchaseHandler = function () {\n      _this.setState({\n        purchasing: true\n      });\n    };\n\n    _this.closedHandler = function () {\n      _this.setState({\n        purchasing: false\n      });\n    };\n\n    _this.continueHandler = function () {\n      var queryParams = [];\n\n      for (var i in _this.state.ingredients) {\n        queryParams.push(encodeURIComponent(i) + \"=\" + encodeURIComponent(_this.state.ingredients[i]));\n      }\n\n      queryParams.push(\"price=\" + _this.state.totalPrice);\n      var queryString = queryParams.join(\"&\");\n\n      _this.props.history.push({\n        pathname: \"/checkout\",\n        search: \"?\" + queryString\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BurgerBuilder, [{\n    key: \"render\",\n    value: function render() {\n      var disabledInfo = _objectSpread({}, this.props.ings);\n\n      for (var key in disabledInfo) {\n        disabledInfo[key] = disabledInfo[key] <= 0;\n      }\n\n      var orderSummary = \"null\";\n      var burger = this.state.error ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Ingredients can't be loaded\") : React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      });\n\n      if (this.props.ings) {\n        burger = React.createElement(Aux, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(Burger, {\n          ingredients: this.props.ings,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }), React.createElement(BuildControls, {\n          ordered: this.purchaseHandler,\n          ingredientAdded: this.props.onIngredientAdded,\n          ingredientRemoved: this.props.onIngredientRemoved,\n          disabled: disabledInfo,\n          purchasable: this.state.purchasable,\n          price: this.state.totalPrice,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }));\n        orderSummary = React.createElement(OrderSummary, {\n          price: this.state.totalPrice,\n          purchaseCancelled: this.closedHandler,\n          purchaseContinued: this.continueHandler,\n          ingredients: this.props.ings,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        });\n      }\n\n      if (this.state.loading) {\n        orderSummary = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Aux, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        modalClosed: this.closedHandler,\n        show: this.state.purchasing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, orderSummary), burger);\n    }\n  }]);\n\n  return BurgerBuilder;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    ings: state.ingredients\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onIngredientAdded: function onIngredientAdded(ingName) {\n      return dispatch({\n        type: actionTypes.ADD_INGREDIENT,\n        ingredientName: ingName\n      });\n    },\n    onIngredientRemoved: function onIngredientRemoved(ingName) {\n      return dispatch({\n        type: actionTypes.REMOVE_INGREDIENT,\n        ingredientName: ingName\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["C:\\Users\\Matko\\Desktop\\repeat\\src\\containers\\BurgerBuilder\\BurgerBuilder.js"],"names":["React","Component","connect","actionTypes","withErrorHandler","Spinner","axios","Aux","Burger","BuildControls","Modal","OrderSummary","BurgerBuilder","state","totalPrice","purchasable","purchasing","loading","error","addIngredientHandler","type","oldCount","ingredients","updatedCount","updatedIngredients","priceAddition","INGREDIENT_PRICES","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseHandler","closedHandler","continueHandler","queryParams","i","push","encodeURIComponent","queryString","join","props","history","pathname","search","disabledInfo","ings","key","orderSummary","burger","onIngredientAdded","onIngredientRemoved","mapStateToProps","mapDispatchToProps","dispatch","ingName","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport * as actionTypes from \"../../store/actions\";\r\n\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport axios from \"../../axios-orders\";\r\nimport Aux from '../../hoc/Aux';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from \"../../components/UI/Modal/Modal\"\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\"\r\n\r\n\r\nclass BurgerBuilder extends Component {\r\n    \r\n    state = {\r\n\r\n        totalPrice: 4,\r\n        purchasable: false,\r\n        purchasing: false,\r\n        loading: false,\r\n        error:false\r\n    }\r\n\r\n     /*componentDidMount(){\r\n       axios.get(\"https://react-my-burger-30c8e.firebaseio.com/ingredients.json\")\r\n        .then(response=> {\r\n            this.setState({ingredients:response.data});\r\n        })\r\n        .catch(error=> {\r\n            this.setState({error:true})\r\n        });\r\n    }*/\r\n\r\n    /*updatePurchaseState (ingredients) {\r\n        const sum = Object.keys( ingredients )\r\n            .map( igKey => {\r\n                return ingredients[igKey];\r\n            } )\r\n            .reduce( ( sum, el ) => {\r\n                return sum + el;\r\n            }, 0 );\r\n        this.setState( { purchasable: sum > 0 } );\r\n    }*/\r\n\r\n    addIngredientHandler = ( type ) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n        this.setState( { totalPrice: newPrice, ingredients: updatedIngredients } );\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    removeIngredientHandler = ( type ) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if ( oldCount <= 0 ) {\r\n            return;\r\n        }\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n        this.setState( { totalPrice: newPrice, ingredients: updatedIngredients } );\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    purchaseHandler=()=> {\r\n        this.setState({purchasing :true})\r\n    }\r\n\r\n    closedHandler=()=> {\r\n    this.setState({purchasing: false});\r\n    }\r\n\r\n    continueHandler=() => {\r\n       const queryParams= [];\r\n       for(let i in this.state.ingredients) {\r\n           queryParams.push(encodeURIComponent(i) + \"=\" + encodeURIComponent(this.state.ingredients[i]));\r\n       }\r\n       queryParams.push(\"price=\" + this.state.totalPrice);\r\n       const queryString=queryParams.join(\"&\");\r\n       this.props.history.push({\r\n        pathname: \"/checkout\",\r\n        search: \"?\" +queryString\r\n       });\r\n       \r\n\r\n    }\r\n\r\n    render () {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for ( let key in disabledInfo ) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n\r\n        let orderSummary= \"null\";\r\n        let burger=this.state.error ? <p>Ingredients can't be loaded</p> : <Spinner/>\r\n\r\n        if (this.props.ings) {\r\n            burger= (\r\n                <Aux>\r\n            <Burger ingredients={this.props.ings} />\r\n            <BuildControls\r\n                ordered={this.purchaseHandler}\r\n                ingredientAdded={this.props.onIngredientAdded}\r\n                ingredientRemoved={this.props.onIngredientRemoved}\r\n                disabled={disabledInfo}\r\n                purchasable={this.state.purchasable}\r\n                price={this.state.totalPrice} />\r\n                </Aux>\r\n            );\r\n            orderSummary = <OrderSummary \r\n            price={this.state.totalPrice}\r\n            purchaseCancelled={this.closedHandler}\r\n            purchaseContinued={this.continueHandler}\r\n            ingredients={this.props.ings}/>\r\n        }\r\n        \r\n        \r\n        if(this.state.loading) {\r\n            orderSummary= <Spinner />\r\n        }\r\n        \r\n\r\n        return (\r\n            <Aux>\r\n               <Modal \r\n               modalClosed={this.closedHandler}\r\n               show={this.state.purchasing}>\r\n               {orderSummary}\r\n               </Modal>\r\n               {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps= state => {\r\n    return {\r\n        ings:state.ingredients\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps= dispatch => {\r\n    return {\r\n        onIngredientAdded:(ingName)=>dispatch({type:actionTypes.ADD_INGREDIENT ,ingredientName:ingName}),\r\n        onIngredientRemoved:(ingName)=>dispatch({type:actionTypes.REMOVE_INGREDIENT ,ingredientName:ingName})\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder,axios));"]},"metadata":{},"sourceType":"module"}