{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Matko\\\\Desktop\\\\repeat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Matko\\\\Desktop\\\\repeat\\\\src\\\\components\\\\Burger\\\\Burger.js\";\nimport React from \"react\";\nimport classes from \"./Burger.css\";\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\n\nvar burger = function burger(props) {\n  var transformedIngredients = Object.keys(props.ingredients).map(function (ing) {\n    return _toConsumableArray(Array(props.ingredients[ing])).map(function (_, i) {\n      return React.createElement(BurgerIngredient, {\n        key: ing + i,\n        type: ing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      });\n    });\n  }).reduce(function (acc, el) {\n    return acc.concat(el);\n  }, []);\n  console.log(transformedIngredients);\n\n  if (transformedIngredients == 0) {\n    transformedIngredients = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"Please add ingredients\");\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.Burger,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(BurgerIngredient, {\n    type: \"bread-top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), transformedIngredients, React.createElement(BurgerIngredient, {\n    type: \"bread-bottom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n};\n\nexport default burger;","map":{"version":3,"sources":["C:\\Users\\Matko\\Desktop\\repeat\\src\\components\\Burger\\Burger.js"],"names":["React","classes","BurgerIngredient","burger","props","transformedIngredients","Object","keys","ingredients","map","ing","Array","_","i","reduce","acc","el","concat","console","log","Burger"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AAEtB,MAAIC,sBAAsB,GAAEC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,WAAlB,EAC3BC,GAD2B,CACvB,UAAAC,GAAG,EAAI;AACR,WAAO,mBAAIC,KAAK,CAACP,KAAK,CAACI,WAAN,CAAkBE,GAAlB,CAAD,CAAT,EACVD,GADU,CACN,UAACG,CAAD,EAAGC,CAAH,EAAQ;AACT,aAAO,oBAAC,gBAAD;AAAkB,QAAA,GAAG,EAAEH,GAAG,GAACG,CAA3B;AAA8B,QAAA,IAAI,EAAEH,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAHU,CAAP;AAIH,GAN2B,EAO3BI,MAP2B,CAOpB,UAACC,GAAD,EAAMC,EAAN,EAAY;AAChB,WAAQD,GAAG,CAACE,MAAJ,CAAWD,EAAX,CAAR;AACH,GAT2B,EASxB,EATwB,CAA5B;AAUAE,EAAAA,OAAO,CAACC,GAAR,CAAYd,sBAAZ;;AACA,MAAGA,sBAAsB,IAAI,CAA7B,EAAgC;AAC7BA,IAAAA,sBAAsB,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA1B;AACF;;AACD,SACI;AAAK,IAAA,SAAS,EAAGJ,OAAO,CAACmB,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKf,sBAFL,EAGI,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAQH,CAxBD;;AA0BA,eAAeF,MAAf","sourcesContent":["import React from \"react\";\r\nimport classes from \"./Burger.css\"\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\" ;\r\n\r\nconst burger = (props) => {\r\n\r\n    let transformedIngredients= Object.keys(props.ingredients)\r\n    .map(ing => {\r\n        return [...Array(props.ingredients[ing])]\r\n    .map((_,i)=> {\r\n        return <BurgerIngredient key={ing+i} type={ing} />;\r\n    });\r\n    })\r\n    .reduce((acc, el)=> {\r\n        return  acc.concat(el)\r\n    } , []);\r\n    console.log(transformedIngredients);\r\n    if(transformedIngredients == 0) {\r\n       transformedIngredients =  <p>Please add ingredients</p>\r\n    }\r\n    return (\r\n        <div className= {classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\"/>\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\"/>\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default burger;"]},"metadata":{},"sourceType":"module"}