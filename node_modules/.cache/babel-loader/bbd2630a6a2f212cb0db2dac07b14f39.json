{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Matko\\\\Desktop\\\\repeat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\Matko\\\\Desktop\\\\repeat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from \"../actions/actionTypes\";\nvar initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false\n};\nvar INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return _objectSpread({}, state, {\n        ingredients: _objectSpread({}, state.ingredients, _defineProperty({}, action.ingredientName, state.ingredients[action.ingredientName] + 1)),\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n      });\n\n    case actionTypes.REMOVE_INGREDIENT:\n      return _objectSpread({}, state, {\n        ingredients: _objectSpread({}, state.ingredients, _defineProperty({}, action.ingredientName, state.ingredients[action.ingredientName] - 1)),\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n      });\n\n    case actionTypes.SET_INGREDIENTS:\n      return _objectSpread({}, state, {\n        ingredients: action.ingredients,\n        error: false,\n        totalPrice: 4\n      });\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return _objectSpread({}, state, {\n        error: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:\\Users\\Matko\\Desktop\\repeat\\src\\store\\reducers\\burgerBuilder.js"],"names":["actionTypes","initialState","ingredients","totalPrice","error","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","state","action","type","ADD_INGREDIENT","ingredientName","REMOVE_INGREDIENT","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED"],"mappings":";;AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,IADI;AAEjBC,EAAAA,UAAU,EAAC,CAFM;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAMA,IAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,GADe;AAEtBC,EAAAA,MAAM,EAAE,GAFc;AAGtBC,EAAAA,IAAI,EAAE,GAHgB;AAItBC,EAAAA,KAAK,EAAE;AAJe,CAA1B;;AAQA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAA+B;AAAA,MAA9BC,KAA8B,uEAAxBV,YAAwB;AAAA,MAAVW,MAAU;;AAC3C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKb,WAAW,CAACc,cAAjB;AACI,+BACOH,KADP;AAEIT,QAAAA,WAAW,oBACJS,KAAK,CAACT,WADF,sBAENU,MAAM,CAACG,cAFD,EAEiBJ,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACG,cAAzB,IAA2C,CAF5D,EAFf;AAMIZ,QAAAA,UAAU,EAACQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACG,cAAR;AANnD;;AASJ,SAAKf,WAAW,CAACgB,iBAAjB;AACA,+BACOL,KADP;AAEIT,QAAAA,WAAW,oBACJS,KAAK,CAACT,WADF,sBAENU,MAAM,CAACG,cAFD,EAEiBJ,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACG,cAAzB,IAA2C,CAF5D,EAFf;AAMIZ,QAAAA,UAAU,EAACQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACG,cAAR;AANnD;;AAQA,SAAKf,WAAW,CAACiB,eAAjB;AACA,+BACON,KADP;AAEIT,QAAAA,WAAW,EAAEU,MAAM,CAACV,WAFxB;AAGIE,QAAAA,KAAK,EAAC,KAHV;AAIID,QAAAA,UAAU,EAAE;AAJhB;;AAOA,SAAKH,WAAW,CAACkB,wBAAjB;AACA,+BACOP,KADP;AAEIP,QAAAA,KAAK,EAAC;AAFV;;AAII;AACA,aAAOO,KAAP;AAlCR;AAqCH,CAtCD;;AAwCA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice:4,\r\n    error: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\n\r\nconst reducer = (state=initialState, action)=> {\r\n    switch(action.type) {\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]:state.ingredients[action.ingredientName] + 1\r\n                },\r\n                totalPrice:state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n        };\r\n\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n        return {\r\n            ...state,\r\n            ingredients: {\r\n                ...state.ingredients,\r\n                [action.ingredientName]:state.ingredients[action.ingredientName] - 1\r\n            },\r\n            totalPrice:state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n        };\r\n        case actionTypes.SET_INGREDIENTS:\r\n        return {\r\n            ...state,\r\n            ingredients: action.ingredients,\r\n            error:false,\r\n            totalPrice: 4\r\n        };\r\n\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n        return {\r\n            ...state,\r\n            error:true\r\n        };\r\n            default:\r\n            return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}