{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Matko\\\\Desktop\\\\repeat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Matko\\\\Desktop\\\\repeat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Matko\\\\Desktop\\\\repeat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Matko\\\\Desktop\\\\repeat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Matko\\\\Desktop\\\\repeat\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Matko\\\\Desktop\\\\repeat\\\\src\\\\containers\\\\Author\\\\Author.js\";\nimport React, { Component } from \"react\";\nimport Input from \"../../components/UI/Input/Input\";\nimport Button from \"../../components/UI/Button/Button\";\nimport classes from \"./Author.css\";\n\nvar Author =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Author, _Component);\n\n  function Author() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Author);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Author)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      controls: {\n        email: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"email\",\n            placeholder: \"Your Email\"\n          },\n          value: \"\",\n          validation: {\n            required: true,\n            isEmail: true\n          },\n          valid: false,\n          touched: false\n        },\n        password: {\n          elementType: \"input\",\n          elementConfig: {\n            type: \"password\",\n            placeholder: \"Password\"\n          },\n          value: \"\",\n          validation: {\n            required: true,\n            minLength: 6\n          },\n          valid: false,\n          touched: false\n        }\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Author, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var formElementsArray = [];\n\n      for (var key in this.state.controls) {\n        formElementsArray.push({\n          id: key,\n          config: this.state.controls[key]\n        });\n      }\n\n      var form = formElementsArray.map(function (formElement) {\n        return React.createElement(Input, {\n          key: formElement.id,\n          elementType: formElement.config.elementType,\n          elementConfig: formElement.config.elementConfig,\n          value: formElement.config.value,\n          invalid: !formElement.config.valid,\n          touched: formElement.config.touched,\n          shouldValidate: formElement.config.validation,\n          changed: function changed(event) {\n            return _this2.inputChangedHandler(event, formElement.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        });\n      });\n      return React.createElement(\"div\", {\n        className: classes.Author,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, form, React.createElement(Button, {\n        btnType: \"Success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"SUBMIT\")));\n    }\n  }]);\n\n  return Author;\n}(Component);\n\nexport default Author;","map":{"version":3,"sources":["C:\\Users\\Matko\\Desktop\\repeat\\src\\containers\\Author\\Author.js"],"names":["React","Component","Input","Button","classes","Author","state","controls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","formElementsArray","key","push","id","config","form","map","formElement","event","inputChangedHandler"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AAEA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,OAAP,MAAoB,cAApB;;IAEMC,M;;;;;;;;;;;;;;;;;UAENC,K,GAAQ;AACJC,MAAAA,QAAQ,EAAE;AACTC,QAAAA,KAAK,EAAE;AACJC,UAAAA,WAAW,EAAC,OADR;AAEJC,UAAAA,aAAa,EAAE;AACXC,YAAAA,IAAI,EAAE,OADK;AAEXC,YAAAA,WAAW,EAAC;AAFD,WAFX;AAMJC,UAAAA,KAAK,EAAC,EANF;AAOJC,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAC,IADD;AAERC,YAAAA,OAAO,EAAC;AAFA,WAPR;AAWJC,UAAAA,KAAK,EAAC,KAXF;AAYJC,UAAAA,OAAO,EAAC;AAZJ,SADE;AAeVC,QAAAA,QAAQ,EAAE;AACNV,UAAAA,WAAW,EAAC,OADN;AAENC,UAAAA,aAAa,EAAE;AACXC,YAAAA,IAAI,EAAE,UADK;AAEXC,YAAAA,WAAW,EAAC;AAFD,WAFT;AAMNC,UAAAA,KAAK,EAAC,EANA;AAONC,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAC,IADD;AAERK,YAAAA,SAAS,EAAC;AAFF,WAPN;AAWNH,UAAAA,KAAK,EAAC,KAXA;AAYNC,UAAAA,OAAO,EAAC;AAZF;AAfA;AADN,K;;;;;;6BAoCK;AAAA;;AACL,UAAMG,iBAAiB,GAAE,EAAzB;;AACA,WAAI,IAAIC,GAAR,IAAe,KAAKhB,KAAL,CAAWC,QAA1B,EAAoC;AAChCc,QAAAA,iBAAiB,CAACE,IAAlB,CAAuB;AACnBC,UAAAA,EAAE,EAACF,GADgB;AAEnBG,UAAAA,MAAM,EAAC,KAAKnB,KAAL,CAAWC,QAAX,CAAoBe,GAApB;AAFY,SAAvB;AAIH;;AAED,UAAMI,IAAI,GAAIL,iBAAiB,CAACM,GAAlB,CAAsB,UAAAC,WAAW;AAAA,eAC3C,oBAAC,KAAD;AACA,UAAA,GAAG,EAAEA,WAAW,CAACJ,EADjB;AAEA,UAAA,WAAW,EAAEI,WAAW,CAACH,MAAZ,CAAmBhB,WAFhC;AAGA,UAAA,aAAa,EAAEmB,WAAW,CAACH,MAAZ,CAAmBf,aAHlC;AAIA,UAAA,KAAK,EAAEkB,WAAW,CAACH,MAAZ,CAAmBZ,KAJ1B;AAKA,UAAA,OAAO,EAAE,CAACe,WAAW,CAACH,MAAZ,CAAmBR,KAL7B;AAMA,UAAA,OAAO,EAAEW,WAAW,CAACH,MAAZ,CAAmBP,OAN5B;AAOA,UAAA,cAAc,EAAEU,WAAW,CAACH,MAAZ,CAAmBX,UAPnC;AAQA,UAAA,OAAO,EAAE,iBAACe,KAAD;AAAA,mBAAS,MAAI,CAACC,mBAAL,CAAyBD,KAAzB,EAA+BD,WAAW,CAACJ,EAA3C,CAAT;AAAA,WART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD2C;AAAA,OAAjC,CAAd;AAaA,aACI;AAAK,QAAA,SAAS,EAAEpB,OAAO,CAACC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCqB,IADD,EAEA,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,CADJ,CADJ;AAQH;;;;EApEgBzB,S;;AAuErB,eAAeI,MAAf","sourcesContent":["import React,{Component} from \"react\";\r\n\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport classes from \"./Author.css\";\r\n\r\nclass Author extends Component {\r\n\r\nstate = {\r\n    controls: {\r\n     email: {\r\n        elementType:\"input\",\r\n        elementConfig: {\r\n            type: \"email\",\r\n            placeholder:\"Your Email\"\r\n        },\r\n        value:\"\",\r\n        validation: {\r\n            required:true,\r\n            isEmail:true\r\n        },\r\n        valid:false,\r\n        touched:false\r\n    },\r\n    password: {\r\n        elementType:\"input\",\r\n        elementConfig: {\r\n            type: \"password\",\r\n            placeholder:\"Password\"\r\n        },\r\n        value:\"\",\r\n        validation: {\r\n            required:true,\r\n            minLength:6\r\n        },\r\n        valid:false,\r\n        touched:false\r\n    \r\n    }\r\n}\r\n}\r\n\r\n\r\n\r\n    render() {\r\n        const formElementsArray= [];\r\n        for(let key in this.state.controls) {\r\n            formElementsArray.push({\r\n                id:key,\r\n                config:this.state.controls[key]\r\n            });\r\n        }\r\n\r\n        const form =  formElementsArray.map(formElement=>(\r\n            <Input \r\n            key={formElement.id}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            invalid={!formElement.config.valid}\r\n            touched={formElement.config.touched}\r\n            shouldValidate={formElement.config.validation}\r\n            changed={(event)=>this.inputChangedHandler(event,formElement.id)} />\r\n            \r\n        ) );\r\n   \r\n        return (\r\n            <div className={classes.Author}>\r\n                <form>\r\n                {form}\r\n                <Button btnType=\"Success\">SUBMIT</Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Author;"]},"metadata":{},"sourceType":"module"}