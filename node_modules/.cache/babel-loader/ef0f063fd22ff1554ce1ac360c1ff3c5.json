{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matko\\\\Desktop\\\\repeat\\\\src\\\\components\\\\Order\\\\Order.js\";\nimport React from \"react\";\nimport classes from \"./Order.css\";\n\nvar order = function order(props) {\n  var ingredients = [];\n\n  for (var ingredientName in props.ingredients) {\n    ingredients.push({\n      name: ingredientName,\n      amount: props.ingredients[ingredientName]\n    });\n  }\n\n  var ingredientOutput = ingredients.map(function (ig) {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, ig.name, \" (\", ig.amount, \")\");\n  });\n  return React.createElement(\"div\", {\n    className: classes.Order,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Price: \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, Number.parseFloat(props.price).toFixed(2))));\n};\n\nexport default order;","map":{"version":3,"sources":["C:\\Users\\Matko\\Desktop\\repeat\\src\\components\\Order\\Order.js"],"names":["React","classes","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","Order","Number","parseFloat","price","toFixed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAErB,MAAMC,WAAW,GAAE,EAAnB;;AAEA,OAAK,IAAIC,cAAT,IAA2BF,KAAK,CAACC,WAAjC,EAA6C;AACzCA,IAAAA,WAAW,CAACE,IAAZ,CAAiB;AACjBC,MAAAA,IAAI,EAACF,cADY;AAEjBG,MAAAA,MAAM,EAAEL,KAAK,CAACC,WAAN,CAAkBC,cAAlB;AAFS,KAAjB;AAGH;;AAED,MAAMI,gBAAgB,GAACL,WAAW,CAACM,GAAZ,CAAgB,UAAAC,EAAE,EAAG;AACxC,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOA,EAAE,CAACJ,IAAV,QAAkBI,EAAE,CAACH,MAArB,MAAP;AACH,GAFsB,CAAvB;AAGA,SAEA;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACW,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASC,MAAM,CAACC,UAAP,CAAkBX,KAAK,CAACY,KAAxB,EAA+BC,OAA/B,CAAuC,CAAvC,CAAT,CAAV,CAFJ,CAFA;AAWH,CAxBD;;AA2BA,eAAed,KAAf","sourcesContent":["import React from \"react\";\r\nimport classes from \"./Order.css\";\r\n\r\nconst order = (props) => {\r\n\r\n    const ingredients= [];\r\n\r\n    for (let ingredientName in props.ingredients){\r\n        ingredients.push({\r\n        name:ingredientName,\r\n        amount: props.ingredients[ingredientName]});\r\n    }\r\n\r\n    const ingredientOutput=ingredients.map(ig=> {\r\n        return <span>{ig.name} ({ig.amount})</span>\r\n    })\r\n    return(\r\n\r\n    <div className={classes.Order}>\r\n        <p></p>\r\n        <p>Price: <strong>{Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n     </div>\r\n\r\n    ) \r\n\r\n    \r\n\r\n}\r\n    \r\n\r\nexport default order;"]},"metadata":{},"sourceType":"module"}